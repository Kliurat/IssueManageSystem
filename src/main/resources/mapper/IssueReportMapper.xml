<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ibm.springboot.dao.IssueReportDao">

	<sql id="columnsAll">
		id,login_id,username,create_count,receive_count,modify_count,finished_per
	</sql>
	
	<!--List<IssueReport> findAll(); 
	   根据输入条件：用户ID,用户姓名。模糊查询Issue报表
	-->
	<select id="findAll" resultType="com.ibm.springboot.entity.IssueReport">
		select 
			<include refid="columnsAll"/>
			from issue_report
			<where>
				<if test="loginId != null and loginId.trim() != ''">
					<bind name="_login_id" value="'%' + loginId + '%'"/>
					login_id like #{_login_id}
				</if>
				
				<if test="username != null and username.trim() != ''">
				    <!-- 模糊查询的另外一种写法 -->
					<bind name="_user_name" value="'%' + username + '%'"/>  
					and username like #{_user_name}
				</if>
			</where>
			order by login_id
	</select>
	
	<!--IssueReport selectByUserId(Integer userId); -->
<!-- 	根据 login_id 查询出 issue_report 的具体信息 -->
	<select id="selectByLoginId" resultType="com.ibm.springboot.entity.IssueReport">
		select 
			<include refid="columnsAll"/>
			from issue_report
			where login_id = #{loginId}
	</select>

	
	<!--int insert(IssueReport report); -->
<!-- 	插入信息 -->
	<insert id="insert">
		insert into issue_report(login_id,username,create_count,receive_count,modify_count,finished_per)
		values (
			#{loginID},
			#{username},
			#{createCount},		
			#{receiveCount},
			#{modifyCount},
			#{finishedPer}
		)
	</insert>
	
	<!-- int update(IssueReport report); -->
<!-- 	修改信息 -->
	<update id="update">
		update issue_report
		set
			create_count = #{createCount},
			receive_count = #{receiveCount},
			modify_count = #{modifyCount},
			finished_per = #{finishedPer}
		where login_id = #{loginID}
	</update>
	
	<delete id="deleteAll">
		delete from issue_report
	</delete>	
	
	<insert id="staticsFromIssueTable">
		insert into issue_report(login_id,username,create_count,receive_count,modify_count,finished_per)
			SELECT t7.loginID,t7.username,t7.create_count,t7.receive_count,t8.modify_count,t8.modify_count / t7.receive_count * 100 finished_per
			from
			(
				SELECT t4.loginID,t4.username,t4.create_count,t6.receive_count
			from
			
				(SELECT loginID,username,COUNT(t3.id) create_count
				FROM 
				(
				SELECT t1.loginID,t1.username,t2.id
				FROM user t1 LEFT JOIN issue t2
				ON t1.loginID = t2.create_person_ID
				) t3
				GROUP BY t3.loginID) t4
			
			LEFT JOIN
			
				(SELECT loginID,COUNT(t5.id) receive_count
				FROM 
				(
				SELECT t1.loginID,t2.id
				FROM user t1 LEFT JOIN issue t2
				ON t1.loginID = t2.modify_person_ID
				) t5
				GROUP BY t5.loginID) t6
			
			ON t4.loginID = t6.loginID
			) t7
			LEFT JOIN 
			
			
			(SELECT loginID,COUNT(t5.id) modify_count
			FROM 
			(
			SELECT t1.loginID,t2.id
			FROM user t1 LEFT JOIN issue t2
			ON t1.loginID = t2.modify_person_ID AND t2.`status` = -1
			) t5
			GROUP BY t5.loginID) t8
			
			ON t7.loginID = t8.loginID
	</insert>
	
	
</mapper>